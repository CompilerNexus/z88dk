//-----------------------------------------------------------------------------
// z80asm
// parser
// Copyright (C) Paulo Custodio, 2011-2022
// License: The Artistic License 2.0, http://www.perlfoundation.org/artistic_license_2_0
//-----------------------------------------------------------------------------

#pragma once

#include "expr.h"
#include "lex.h"
#include "symtab.h"
#include "utils.h"
#include <vector>
using namespace std;

class Asm;
class Expr;

class Parser {
public:
	void clear();
	bool parse();		// parse lines from g_preproc

private:
	enum class State { Main };

	Lexer	m_lexer;						// line being parsed
	State	m_state{ State::Main };			// parser state
	vector<shared_ptr<Expr>> m_exprs;		// parsed expressions 

	bool parse_line();
	bool parse_line_main();
	string check_label();
	bool parse_symbol_declare(Symbol::Scope scope);

	// generated by make_parser_code.pl
	bool parse_main1();
	bool parse_main1_action(int action);
};
